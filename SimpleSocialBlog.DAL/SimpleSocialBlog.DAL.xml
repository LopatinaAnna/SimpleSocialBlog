<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimpleSocialBlog.DAL</name>
    </assembly>
    <members>
        <member name="T:SimpleSocialBlog.DAL.EF.DataContext">
            <summary>
            Define db context and include DbSet of models
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.EF.DataContext.#ctor">
            <summary>
            Constructor, call base with connection string
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.EF.DataContext.#cctor">
            <summary>
            Constructor, call base with connection string
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.EF.DataContext.Articles">
            <summary>
            DbSets for Articles
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.EF.DataContext.Reviews">
            <summary>
            DbSets for Reviews
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.EF.DataContext.Questionaries">
            <summary>
            DbSets for Questionaries
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.EF.DataContext.Tags">
            <summary>
            DbSets for Tags
            </summary>
        </member>
        <member name="T:SimpleSocialBlog.DAL.EF.DataContextInitializer">
            <summary>
            DataContext Initializer
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.EF.DataContextInitializer.Seed(SimpleSocialBlog.DAL.EF.DataContext)">
            <summary>
            Add data to the context
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Entities.Article">
            <summary>
            Defines Article entity
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Article.Title">
            <summary>
            Title of article
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Article.Date">
            <summary>
            Creating date of article
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Article.Text">
            <summary>
            Text of article
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Article.Tags">
            <summary>
            Article's tags
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Entities.Article.#ctor">
            <summary>
            Article constructor
            </summary>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Entities.BaseEntity">
            <summary>
            Base entity
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.BaseEntity.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Entities.Questionary">
            <summary>
            Defines Questionary entity
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Questionary.Name">
            <summary>
            Person's name
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Questionary.Rate">
            <summary>
            Rate of site
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Questionary.Recommend">
            <summary>
            Recommend
            </summary>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Entities.Review">
            <summary>
            Defines Review entity
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Review.Name">
            <summary>
            Author's name
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Review.Date">
            <summary>
            Create date
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Review.Text">
            <summary>
            Review's text
            </summary>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Entities.Tag">
            <summary>
            Tag entity
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Tag.TagName">
            <summary>
            Name of tag
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Entities.Tag.Articles">
            <summary>
            Articles collection
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Entities.Tag.#ctor">
            <summary>
            Tag constructor
            </summary>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Interfaces.IArticleRepository">
            <summary>
            IArticleRepository
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IArticleRepository.Create(SimpleSocialBlog.DAL.Entities.Article)">
            <summary>
            Create
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IArticleRepository.FindById(System.Int32)">
            <summary>
            FindById
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IArticleRepository.FindByIdWithDetails(System.Int32)">
            <summary>
            FindByIdWithDetails
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IArticleRepository.Get">
            <summary>
            Get
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IArticleRepository.Get(System.Func{SimpleSocialBlog.DAL.Entities.Article,System.Boolean})">
            <summary>
            Get with predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IArticleRepository.GetSort(System.Func{SimpleSocialBlog.DAL.Entities.Article,System.DateTime})">
            <summary>
            GetSort with predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IArticleRepository.Remove(SimpleSocialBlog.DAL.Entities.Article)">
            <summary>
            Remove
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IArticleRepository.GetSortArticles">
            <summary>
            Get Sort Articles
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IArticleRepository.GetArticlesByTag(System.String)">
            <summary>
            Get Sort Articles
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IArticleRepository.Update(SimpleSocialBlog.DAL.Entities.Article)">
            <summary>
            Update
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Interfaces.IQuestionaryRepository">
            <summary>
            IQuestionaryRepository
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IQuestionaryRepository.Create(SimpleSocialBlog.DAL.Entities.Questionary)">
            <summary>
            Create
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IQuestionaryRepository.FindById(System.Int32)">
            <summary>
            FindById
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IQuestionaryRepository.Get">
            <summary>
            Get
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IQuestionaryRepository.Get(System.Func{SimpleSocialBlog.DAL.Entities.Questionary,System.Boolean})">
            <summary>
            Get with predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IQuestionaryRepository.Remove(SimpleSocialBlog.DAL.Entities.Questionary)">
            <summary>
            Remove
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IQuestionaryRepository.Update(SimpleSocialBlog.DAL.Entities.Questionary)">
            <summary>
            Update
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Interfaces.IReviewRepository">
            <summary>
            IReviewRepository
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IReviewRepository.Create(SimpleSocialBlog.DAL.Entities.Review)">
            <summary>
            Create
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IReviewRepository.FindById(System.Int32)">
            <summary>
            FindById
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IReviewRepository.Get">
            <summary>
            Get
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IReviewRepository.Get(System.Func{SimpleSocialBlog.DAL.Entities.Review,System.Boolean})">
            <summary>
            Get with predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IReviewRepository.GetSort(System.Func{SimpleSocialBlog.DAL.Entities.Review,System.DateTime})">
            <summary>
            GetSort with predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IReviewRepository.Remove(SimpleSocialBlog.DAL.Entities.Review)">
            <summary>
            Remove
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IReviewRepository.Update(SimpleSocialBlog.DAL.Entities.Review)">
            <summary>
            Update
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Interfaces.ITagRepository">
            <summary>
            ITagRepository
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.ITagRepository.Create(SimpleSocialBlog.DAL.Entities.Tag)">
            <summary>
            Create
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.ITagRepository.FindById(System.Int32)">
            <summary>
            FindById
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.ITagRepository.FindByIdWithDetails(System.Int32)">
            <summary>
            FindByIdWithDetails
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.ITagRepository.GetTagByName(System.String)">
            <summary>
            Get Tag By Name
            </summary>
            <param name="tag_name">Name</param>
            <returns>Tag By Name</returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.ITagRepository.GetAllTags">
            <summary>
            Get
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.ITagRepository.Update(SimpleSocialBlog.DAL.Entities.Tag)">
            <summary>
            Update
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.ITagRepository.Remove(SimpleSocialBlog.DAL.Entities.Tag)">
            <summary>
            Remove
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Interfaces.IUnitOfWork">
            <summary>
            IUnitOfWork interface
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Interfaces.IUnitOfWork.Articles">
            <summary>
            Articles property
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Interfaces.IUnitOfWork.Reviews">
            <summary>
            Reviews property
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Interfaces.IUnitOfWork.Questionaries">
            <summary>
            Questionaries property
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Interfaces.IUnitOfWork.Tags">
            <summary>
            Questionaries property
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Interfaces.IUnitOfWork.Save">
            <summary>
            Save changes
            </summary>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Repositories.ArticleRepository">
            <summary>
            ArticleRepository
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.ArticleRepository.data">
            <summary>
            DataContext
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.ArticleRepository.dbSet">
            <summary>
            DbSet
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Repositories.ArticleRepository.#ctor(SimpleSocialBlog.DAL.EF.DataContext)">
            <summary>
            Constructor, takes data context as parameter
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Repositories.QuestionaryRepository">
            <summary>
            QuestionaryRepository
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.QuestionaryRepository.data">
            <summary>
            DataContext
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.QuestionaryRepository.dbSet">
            <summary>
            DbSet
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Repositories.QuestionaryRepository.#ctor(SimpleSocialBlog.DAL.EF.DataContext)">
            <summary>
            Constructor, takes data context as parameter
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Repositories.ReviewRepository">
            <summary>
            ReviewRepository
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.ReviewRepository.data">
            <summary>
            DataContext
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.ReviewRepository.dbSet">
            <summary>
            DbSet
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Repositories.ReviewRepository.#ctor(SimpleSocialBlog.DAL.EF.DataContext)">
            <summary>
            Constructor, takes data context as parameter
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Repositories.TagRepository">
            <summary>
            TagRepository
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.TagRepository.data">
            <summary>
            DataContext
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.TagRepository.dbSet">
            <summary>
            DbSet
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Repositories.TagRepository.#ctor(SimpleSocialBlog.DAL.EF.DataContext)">
            <summary>
            Constructor, takes data context as parameter
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:SimpleSocialBlog.DAL.Repositories.UnitOfWork">
            <summary>
            Defines access to repositories with properties and context for repositories
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.UnitOfWork.data">
            <summary>
            Data context
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.UnitOfWork.articleRepository">
            <summary>
            Article repository
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.UnitOfWork.reviewRepository">
            <summary>
            Review repository
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.UnitOfWork.questionaryRepository">
            <summary>
            Questionary repository
            </summary>
        </member>
        <member name="F:SimpleSocialBlog.DAL.Repositories.UnitOfWork.tagRepository">
            <summary>
            Article repository
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Repositories.UnitOfWork.Articles">
            <summary>
            Articles property
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Repositories.UnitOfWork.Tags">
            <summary>
            Tags property
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Repositories.UnitOfWork.Reviews">
            <summary>
            Reviews property
            </summary>
        </member>
        <member name="P:SimpleSocialBlog.DAL.Repositories.UnitOfWork.Questionaries">
            <summary>
            Questionaries property
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Repositories.UnitOfWork.Save">
            <summary>
            Save changes
            </summary>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Repositories.UnitOfWork.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SimpleSocialBlog.DAL.Repositories.UnitOfWork.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
    </members>
</doc>
